{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile, storing personal information and preferences.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user profile."
        },
        "googleId": {
          "type": "string",
          "description": "The user's unique ID from Google Sign-In. Used to link local data to the Firebase database.",
          "format": "string"
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "country": {
          "type": "string",
          "description": "User's country of residence."
        },
        "state": {
          "type": "string",
          "description": "User's state of residence."
        },
        "planStatus": {
          "type": "string",
          "description": "User's subscription plan status (Free, Pro, Executive)."
        },
        "financialGoal": {
          "type": "string",
          "description": "The users stated financial goals."
        }
      },
      "required": [
        "id",
        "googleId",
        "name",
        "email"
      ]
    },
    "Deal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Deal",
      "type": "object",
      "description": "Represents a saved deal analyzed by the user, storing financial metrics and details.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the deal."
        },
        "userProfileId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Deal)"
        },
        "dealType": {
          "type": "string",
          "description": "Type of deal (Rental Property, House Flip, Commercial Multifamily)."
        },
        "dealName": {
          "type": "string",
          "description": "Name of the deal."
        },
        "purchasePrice": {
          "type": "number",
          "description": "Purchase price of the property."
        },
        "monthlyCashFlow": {
          "type": "number",
          "description": "Monthly cash flow of the deal."
        },
        "cocReturn": {
          "type": "number",
          "description": "Cash-on-cash return of the deal."
        },
        "roi": {
          "type": "number",
          "description": "Return on investment of the deal."
        }
      },
      "required": [
        "id",
        "userProfileId",
        "dealType",
        "dealName",
        "purchasePrice",
        "monthlyCashFlow",
        "cocReturn"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profile information. This collection uses the user's UID as the document ID, ensuring that only the authenticated user can access their own profile data.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Authentication UID of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/deals/{dealId}",
        "definition": {
          "entityName": "Deal",
          "schema": {
            "$ref": "#/backend/entities/Deal"
          },
          "description": "Stores deals associated with a specific user.  This collection is a subcollection of the user's profile, ensuring that only the authenticated user can access their own deals. Includes denormalized 'userProfileId' to support authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Authentication UID of the user who owns the deal."
            },
            {
              "name": "dealId",
              "description": "The unique ID of the deal."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure data isolation and security based on user authentication. User profiles and their associated deals are stored under a path-based ownership model, `/users/{userId}`. This structure facilitates simple security rules based on `request.auth.uid`, ensuring that users can only access their own data. The deals are stored as subcollections of user profiles to represent the `User 1:N Deals` relationship. This design prioritizes authorization independence, avoiding the need for `get()` calls in security rules.\n\n**Authorization Independence:** The structure inherently supports authorization independence because each user's data is stored under their own `uid`.  Rules can directly check if `request.auth.uid == userId` without needing to fetch parent document data.\n\n**QAPs Support:**\n*   **List Operations:** The structure supports secure list operations because listing deals is always scoped to a specific user (`/users/{userId}/deals`). The rules can ensure that only the authenticated user can list their own deals.\n\nThis structure also facilitates easy scaling and maintenance, as user data is naturally partitioned."
  }
}