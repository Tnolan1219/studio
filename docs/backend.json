{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user's profile in the TKN Fi RE application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user profile."
        },
        "email": {
          "type": "string",
          "description": "User's email address.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "User's full name."
        },
        "state": {
          "type": "string",
          "description": "User's state of residence."
        },
        "country": {
          "type": "string",
          "description": "User's country of residence."
        },
        "age": {
          "type": "number",
          "description": "User's age."
        },
        "financialGoal": {
          "type": "string",
          "description": "User's primary financial goal."
        },
        "planStatus": {
          "type": "string",
          "description": "User's subscription plan status (Free, Pro, Executive)."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    },
    "Deal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Deal",
      "type": "object",
      "description": "Represents a saved real estate deal analyzed by a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the deal."
        },
        "userId": {
          "type": "string",
          "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Deal)"
        },
        "dealName": {
          "type": "string",
          "description": "Name of the deal."
        },
        "propertyType": {
          "type": "string",
          "description": "Type of property (Rental, Flip, Commercial)."
        },
        "purchasePrice": {
          "type": "number",
          "description": "Purchase price of the property."
        },
        "monthlyCashFlow": {
          "type": "number",
          "description": "Estimated monthly cash flow of the property."
        },
        "cocReturn": {
          "type": "number",
          "description": "Cash-on-cash return for the property."
        }
      },
      "required": [
        "id",
        "userId",
        "dealName",
        "propertyType",
        "purchasePrice"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": {
            "$ref": "#/backend/entities/UserProfile"
          },
          "description": "Stores user profiles, keyed by their unique Firebase Auth ID.  This path enforces path-based ownership, ensuring only the authenticated user can access their profile data.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Auth UID of the user."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/deals/{dealId}",
        "definition": {
          "entityName": "Deal",
          "schema": {
            "$ref": "#/backend/entities/Deal"
          },
          "description": "Stores real estate deals saved by a user.  This subcollection structure enforces path-based ownership. The `userId` field within each Deal document is redundant but maintained for potential data integrity checks. It allows each user to only access their own saved deals.",
          "params": [
            {
              "name": "userId",
              "description": "The Firebase Auth UID of the user who owns the deal."
            },
            {
              "name": "dealId",
              "description": "The unique ID of the saved deal."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure Authorization Independence, DBAC, and QAPs. User profiles are stored under `/users/{userId}` for private data accessible only by the user. Saved deals are stored under `/users/{userId}/deals/{dealId}` as a subcollection, maintaining the user's ownership. This structure avoids `get()` calls in security rules, enabling atomic operations. The design enforces a homogeneous security posture for all documents within each collection. User roles are derived from the user ID, eliminating the need for custom claims and providing a clear, debuggable authorization model. Data clarity is ensured through explicit field naming and schema definitions."
  }
}