
{
  "entities": {
    "UserProfile": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "UserProfile",
      "type": "object",
      "description": "Represents a user profile in the TKN Fi RE application.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the UserProfile entity." },
        "name": { "type": "string", "description": "User's full name." },
        "email": { "type": "string", "description": "User's email address.", "format": "email" },
        "country": { "type": "string", "description": "User's country of residence." },
        "state": { "type": "string", "description": "User's state of residence." },
        "plan": { "type": "string", "description": "User's subscription plan status.", "enum": ["Free", "Pro", "Executive", "Elite"] },
        "dutyStation": { "type": "string", "description": "User's duty station if applicable." },
        "rank": { "type": "string", "description": "User's rank if applicable." },
        "branch": { "type": "string", "description": "User's branch of service if applicable." },
        "financialGoal": { "type": "string", "description": "User's stated financial goal." }
      },
      "required": ["id", "name", "email", "country", "state", "plan"]
    },
    "Deal": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Deal",
      "type": "object",
      "description": "Represents a saved real estate deal analyzed in the TKN Fi RE application.",
      "properties": {
        "id": { "type": "string", "description": "Unique identifier for the Deal entity." },
        "userId": { "type": "string", "description": "Reference to UserProfile. (Relationship: UserProfile 1:N Deal)" },
        "dealName": { "type": "string", "description": "Name given to the deal by the user." },
        "propertyType": { "type": "string", "description": "Type of property (Rental, Flip, Multifamily)." },
        "purchasePrice": { "type": "number", "description": "Purchase price of the property." },
        "monthlyCashFlow": { "type": "number", "description": "Calculated monthly cash flow for the deal." },
        "cocReturn": { "type": "number", "description": "Calculated cash-on-cash return for the deal." },
        "roi": { "type": "number", "description": "Calculated return on investment for the deal." },
        "isPublished": { "type": "boolean", "description": "Whether the deal is visible to the community." },
        "authorName": { "type": "string", "description": "The name of the user who published the deal." }
      },
      "required": ["id", "userId", "dealName", "propertyType", "purchasePrice", "isPublished", "authorName"]
    }
  },
  "auth": {
    "providers": ["password", "anonymous"]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "UserProfile",
          "schema": { "$ref": "#/backend/entities/UserProfile" },
          "description": "Stores user profile data. Path-based ownership ensures only the user can access their profile."
        }
      },
      {
        "path": "/users/{userId}/deals/{dealId}",
        "definition": {
          "entityName": "Deal",
          "schema": { "$ref": "#/backend/entities/Deal" },
          "description": "Stores deals associated with each user. Path-based ownership ensures only the user can access their deals."
        }
      },
      {
        "path": "/publishedDeals/{dealId}",
        "definition": {
            "entityName": "Deal",
            "schema": { "$ref": "#/backend/entities/Deal" },
            "description": "A root-level collection containing copies of all deals that users have publicly published for the community to see."
        }
      }
    ],
    "reasoning": "The Firestore structure is designed for security and scalability. User-specific data (profiles, private deals) is nested under `/users/{userId}` for strict, path-based security rules. A new root-level collection, `/publishedDeals`, is introduced to support the 'Community Deals' feature. When a user publishes a deal, a copy is placed in this collection, which has read-only access for all authenticated users. This prevents exposing all user data while still enabling a public showcase of selected deals."
  }
}
