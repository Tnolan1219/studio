/**
 * @fileoverview Firestore Security Rules for TKN Fi RE application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model, ensuring that users can only access and modify their own data.
 *
 * Data Structure:
 * All data is nested under /users/{userId}, with user profiles and deals stored as subcollections.
 *  - /users/{userId}/userProfile: Stores user profile data.
 *  - /users/{userId}/deals/{dealId}: Stores real estate deals associated with each user.
 *
 * Key Security Decisions:
 *  - User profiles and deals are only accessible to the authenticated user.
 *  - Data consistency is enforced between the path and the document's internal fields.
 *
 * Denormalization for Authorization:
 *  - The 'userId' is encoded in the path for both userProfile and Deal collections. This allows direct authorization checks without additional reads.
 *
 * Structural Segregation:
 *  - User data is segregated under /users/{userId} to ensure privacy and simplify access control.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Manages access to user profile data. Only the authenticated user can read and write their profile.
     * @path /users/{userId}/userProfile
     * @allow (read, write): If the user is authenticated and their UID matches the userId in the path.
     * @deny (read, write): If the user is not authenticated or their UID does not match the userId in the path.
     * @principle Enforces document ownership for all operations.
     */
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}