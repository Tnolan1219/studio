/**
 * @fileOverview Firestore Security Rules for TKN Fi RE application.
 *
 * Core Philosophy:
 * This ruleset enforces a strict user-ownership model for private data
 * and allows public read access to published deals.
 *
 * Data Structure:
 * - User profiles are stored under `/users/{userId}`.
 * - User-specific deals are stored under `/users/{userId}/deals/{dealId}`.
 * - Publicly visible deals are copied to `/publishedDeals/{dealId}`.
 *
 * Key Security Decisions:
 * - Users can only access their own profile and deals.
 * - All authenticated users can read published deals.
 * - Listing all users is disallowed.
 * - All write operations to root collections require authentication.
 *
 * Denormalization for Authorization:
 * - `publishedDeals` copies the `authorName` from the original Deal document. This simplifies the rules and avoids cross-collection reads.
 *
 * Structural Segregation:
 * - Private deals are stored under the user's profile, while public deals are stored in a separate, top-level collection.
 */
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the request is made by a signed-in user.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the request is made by the owner of the resource.
     * @param {string} userId - The user ID to compare against the request's auth UID.
     */
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * @description Checks if the request is made by the existing owner of the resource.
     * @param {string} userId - The user ID to compare against the resource's data.
     */
    function isExistingOwner(userId) {
      return isOwner(userId) && resource != null;
    }

    /**
     * @description Enforces rules for user profiles.
     * @path /users/{userId}
     * @allow (create) - User with UID 'user123' can create their own profile with id: 'user123'.
     * @allow (get, update, delete) - User with UID 'user123' can read, update, and delete their own profile.
     * @deny (create) - User with UID 'user456' cannot create a profile for 'user123'.
     * @deny (update, delete) - User with UID 'user456' cannot update or delete the profile of 'user123'.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false; // Prevent listing all users.
      allow create: if isOwner(userId) && request.resource.data.id == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.id == resource.data.id;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Enforces rules for deals associated with a user.
     * @path /users/{userId}/deals/{dealId}
     * @allow (create) - User with UID 'user123' can create a deal under their profile.
     * @allow (get, update, delete) - User with UID 'user123' can read, update, and delete their own deals.
     * @deny (create) - User with UID 'user456' cannot create a deal for 'user123'.
     * @deny (update, delete) - User with UID 'user456' cannot update or delete a deal belonging to 'user123'.
     * @principle Restricts access to a user's own data tree.
     */
    match /users/{userId}/deals/{dealId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId) && request.resource.data.userId == userId;
      allow update: if isExistingOwner(userId) && request.resource.data.userId == resource.data.userId;
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Enforces rules for publicly published deals.
     * @path /publishedDeals/{dealId}
     * @allow (get, list) - Any authenticated user can read published deals.
     * @allow (create) - Only the deal's owner (identified by userId) can create. The userId field on the document must match the request's auth UID.
     * @allow (update, delete) - Only the deal's owner (identified by userId) can update or delete, and only if the document exists.
     * @deny (create) - Anonymous users cannot create published deals.
     * @deny (update, delete) - Anonymous users cannot update or delete published deals.
     * @principle Allows public read access while restricting write access to the owner.
     */
    match /publishedDeals/{dealId} {
      allow get, list: if true;
      allow create: if isSignedIn() && request.resource.data.userId == request.auth.uid;
      allow update: if isSignedIn() && resource.data.userId == request.auth.uid && resource != null;
      allow delete: if isSignedIn() && resource.data.userId == request.auth.uid && resource != null;
    }
  }
}